{
  "FilePath": "c:\\Users\\Yon\\Documents\\blazor-poc-final\\BlazorWebViewerServer\\BlazorWebViewerServer.csproj",
  "Configuration": {
    "ConfigurationName": "MVC-3.0",
    "LanguageVersion": "3.0",
    "Extensions": [
      {
        "ExtensionName": "MVC-3.0"
      }
    ]
  },
  "ProjectWorkspaceState": {
    "TagHelpers": [
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.App",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "App",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.App"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.App",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.App",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.App",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.Counter",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Counter",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.Counter"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.Counter",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.Pages.Counter",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.Counter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.Error",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Error",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.Error"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.Error",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.Pages.Error",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.Error",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.FetchData",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "FetchData",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.FetchData"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.FetchData",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.Pages.FetchData",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.FetchData",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.Index",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Index",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.Index"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.Index",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.Pages.Index",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.Index",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.__generated__WebViewer",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "__generated__WebViewer",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.__generated__WebViewer"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.__generated__WebViewer",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.Pages.__generated__WebViewer",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.__generated__WebViewer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.WebViewer",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "WebViewer",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.WebViewer"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.WebViewer",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.Pages.WebViewer",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.WebViewer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.__generated__Index",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "__generated__Index",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.__generated__Index"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.__generated__Index",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.Pages.__generated__Index",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.__generated__Index",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.__generated__FetchData",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "__generated__FetchData",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.__generated__FetchData"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Pages.__generated__FetchData",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.Pages.__generated__FetchData",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Pages.__generated__FetchData",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Shared.MainLayout",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "MainLayout",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Shared.MainLayout"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Shared.MainLayout",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.Shared.MainLayout",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Shared.MainLayout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "BlazorWebViewerServer.Shared.MainLayout.Body",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "MainLayout",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "BlazorWebViewerServer.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "BlazorWebViewerServer.Shared.MainLayout.Body",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "BlazorWebViewerServer.Shared.MainLayout",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "BlazorWebViewerServer.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Shared.NavMenu",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NavMenu",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Shared.NavMenu"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Shared.NavMenu",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.Shared.NavMenu",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Shared.NavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Shared.__generated__NavMenu",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "__generated__NavMenu",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Shared.__generated__NavMenu"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "BlazorWebViewerServer.Shared.__generated__NavMenu",
        "AssemblyName": "BlazorWebViewerServer",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "BlazorWebViewerServer.Shared.__generated__NavMenu",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorWebViewerServer.Shared.__generated__NavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeView",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Policy"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Roles"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Resource"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.AuthorizeView",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Policy"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Roles"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Resource"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.Authorized",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "Microsoft.AspNetCore.Components.AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.Authorized",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.AuthorizeView",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.AuthorizeView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "CascadingAuthenticationState",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingAuthenticationState"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": null,
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingAuthenticationState",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingAuthenticationState",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingAuthenticationState",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingAuthenticationState.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingAuthenticationState",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingAuthenticationState.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "CascadingValue",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.CascadingValue<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Name"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingValue",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.CascadingValue<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Name"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<T>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingValue",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<T>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts, plus applying any authorization rules.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "PageDisplay",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AuthorizingContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AuthorizingContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorizedContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorizedContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the page component to display.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Page"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "PageParameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the parameters to pass to the page.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "PageParameters"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts, plus applying any authorization rules.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.PageDisplay",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AuthorizingContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AuthorizingContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorizedContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorizedContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the page component to display.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Page"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "PageParameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the parameters to pass to the page.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "PageParameters"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay.AuthorizingContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizingContent",
            "ParentTag": "PageDisplay",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay.AuthorizingContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay.AuthorizingContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizingContent",
            "ParentTag": "Microsoft.AspNetCore.Components.PageDisplay",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay.AuthorizingContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay.NotAuthorizedContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorizedContent",
            "ParentTag": "PageDisplay",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorizedContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay.NotAuthorizedContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.PageDisplay.NotAuthorizedContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorizedContent",
            "ParentTag": "Microsoft.AspNetCore.Components.PageDisplay",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorizedContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.PageDisplay.NotAuthorizedContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "DataAnnotationsValidator",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that displays whichever other component corresponds to the\n            current navigation location.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Router",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched, along with its referenced\n            assemblies, for components matching the URI.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthorizingContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AuthorizingContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorizedContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorizedContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFoundContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component that should be used as a fallback when no match is found for the requested route.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotFoundContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that displays whichever other component corresponds to the\n            current navigation location.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.Router",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched, along with its referenced\n            assemblies, for components matching the URI.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthorizingContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AuthorizingContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorizedContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.AuthenticationState>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotAuthorizedContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFoundContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component that should be used as a fallback when no match is found for the requested route.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "NotFoundContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.AuthorizingContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizingContent",
            "ParentTag": "Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.AuthorizingContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.AuthorizingContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizingContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.AuthorizingContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotAuthorizedContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorizedContent",
            "ParentTag": "Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorizedContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotAuthorizedContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotAuthorizedContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorizedContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'NotAuthorizedContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotAuthorizedContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFoundContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the type of the component that should be used as a fallback when no match is found for the requested route.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotFoundContent",
            "ParentTag": "Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFoundContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFoundContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the type of the component that should be used as a fallback when no match is found for the requested route.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NotFoundContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFoundContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "EditForm",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "EditContext"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Model"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "EditContext"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Model"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditForm",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Diagnostics": [],
            "Metadata": {
              "Components.ChildContentParameterName": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputDate",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputDate<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputDate<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputNumber<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputNumber<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputSelect<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.InputSelect<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputSelect",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<T>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputText",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ValidationMessage",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<T>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Specifies the type of the type parameter T for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<T> component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ValidationSummary",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "NavLink",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Match"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Match"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "NavLink",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink",
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "Kind": "Components.Splat",
        "Name": "Attributes",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Merges a collection of attributes into the current element or component.",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "@attributes",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Splat",
            "Name": "@attributes",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Merges a collection of attributes into the current element or component.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Attributes",
              "Common.DirectiveAttribute": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Splat",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Attributes"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.Razor",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting elements containing attributes with URL expected values.\n            </summary>\n            <remarks>Resolves URLs starting with '~/' (relative to the application's 'webroot' setting) that are not\n            targeted by other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s. Runs prior to other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s to ensure\n            application-relative URLs are resolved.</remarks>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "itemid",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "href",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "applet",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "archive",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "area",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "href",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "audio",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "src",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "base",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "href",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "blockquote",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "cite",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "button",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "formaction",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "del",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "cite",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "embed",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "form",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "action",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "html",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "manifest",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "iframe",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "src",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "img",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "img",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "srcset",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "formaction",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "ins",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "cite",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "link",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "href",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "menuitem",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "icon",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "object",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "archive",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "object",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "data",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "q",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "cite",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "script",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "src",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "source",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "source",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "srcset",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "track",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "video",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "poster",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "video",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "src",
                "NameComparison": 0,
                "Value": "~/",
                "ValueComparison": 2,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;a&gt; elements.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-action",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-all-route-data",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-area",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-controller",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-fragment",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-host",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-page",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-page-handler",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-protocol",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-route",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "a",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-route-",
                "NameComparison": 1,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-action",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the action method.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Action"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-area",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the area.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Area"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-controller",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the controller.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Controller"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fragment",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The URL fragment name.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Fragment"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-host",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The host name.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Host"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the page.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Page"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page-handler",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the page handler.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "PageHandler"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-protocol",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The protocol for the URL, such as \"http\" or \"https\".\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Protocol"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-route",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if one of <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\" /> \n            or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Route"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-all-route-data",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "IsEnum": false,
            "IndexerNamePrefix": "asp-route-",
            "IndexerTypeName": "System.String",
            "Documentation": "\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "RouteValues"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;cache&gt; elements.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "cache",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "priority",
            "TypeName": "Microsoft.Extensions.Caching.Memory.CacheItemPriority?",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.Extensions.Caching.Memory.CacheItemPriority\" /> policy for the cache entry.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Priority"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "enabled",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Enabled"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-after",
            "TypeName": "System.TimeSpan?",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ExpiresAfter"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-on",
            "TypeName": "System.DateTimeOffset?",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ExpiresOn"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-sliding",
            "TypeName": "System.TimeSpan?",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ExpiresSliding"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryBy"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-cookie",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByCookie"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-culture",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByCulture"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-header",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByHeader"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-query",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByQuery"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-route",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByRoute"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-user",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByUser"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;distributed-cache&gt; elements.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "distributed-cache",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "name",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a unique name to discriminate cached entries.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Name"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "enabled",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Enabled"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-after",
            "TypeName": "System.TimeSpan?",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ExpiresAfter"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-on",
            "TypeName": "System.DateTimeOffset?",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ExpiresOn"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-sliding",
            "TypeName": "System.TimeSpan?",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ExpiresSliding"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryBy"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-cookie",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByCookie"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-culture",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByCulture"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-header",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByHeader"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-query",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByQuery"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-route",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByRoute"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-user",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "VaryByUser"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;environment&gt; elements that conditionally renders\n            content based on the current value of <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            If the environment is not listed in the specified <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\" />, \n            or if it is in <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" />, the content will not be rendered.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "environment",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "exclude",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma separated list of environment names in which the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Exclude"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "include",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Include"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "names",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Names"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;button&gt; elements and &lt;input&gt; elements with\n            their <c>type</c> attribute set to <c>image</c> or <c>submit</c>.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "button",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-action",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "button",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-all-route-data",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "button",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-area",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "button",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-controller",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "button",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-fragment",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "button",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-page",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "button",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-page-handler",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "button",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-route",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "button",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-route-",
                "NameComparison": 1,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "image",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-action",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "image",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-all-route-data",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "image",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-area",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "image",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-controller",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "image",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-fragment",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "image",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-page",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "image",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-page-handler",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "image",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-route",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "image",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-route-",
                "NameComparison": 1,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "submit",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-action",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "submit",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-all-route-data",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "submit",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-area",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "submit",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-controller",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "submit",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-fragment",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "submit",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-page",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "submit",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-page-handler",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "submit",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-route",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "NameComparison": 0,
                "Value": "submit",
                "ValueComparison": 1,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "asp-route-",
                "NameComparison": 1,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-action",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the action method.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Action"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-area",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the area.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Area"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-controller",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the controller.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Controller"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fragment",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Fragment"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the page.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Page"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page-handler",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the page handler.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "PageHandler"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-route",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Route"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-all-route-data",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "IsEnum": false,
            "IndexerNamePrefix": "asp-route-",
            "IndexerTypeName": "System.String",
            "Documentation": "\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "RouteValues"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;form&gt; elements.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "form",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-action",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the action method.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Action"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-antiforgery",
            "TypeName": "System.Boolean?",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Whether the antiforgery token should be generated.\n            </summary>\n            <value>Defaults to <c>false</c> if user provides an <c>action</c> attribute\n            or if the <c>method</c> is <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get\" />; <c>true</c> otherwise.</value>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Antiforgery"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-area",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the area.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Area"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-controller",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the controller.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Controller"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fragment",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Fragment"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the page.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Page"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page-handler",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the page handler.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "PageHandler"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-route",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Route"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-all-route-data",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "IsEnum": false,
            "IndexerNamePrefix": "asp-route-",
            "IndexerTypeName": "System.String",
            "Documentation": "\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "RouteValues"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;img&gt; elements that supports file versioning.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "img",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-append-version",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              },
              {
                "Name": "src",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-append-version",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Value indicating if file version should be appended to the src urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AppendVersion"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "src",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Source of the image.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Src"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;input&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-for",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "For"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-format",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The format string (see https://msdn.microsoft.com/en-us/library/txafckwd.aspx) used to format the\n            <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> result. Sets the generated \"value\" attribute to that formatted string.\n            </summary>\n            <remarks>\n            Not used if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is\n            <c>checkbox</c>, <c>password</c>, or <c>radio</c>. That is, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is used when calling\n            <see cref=\"M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)\" />.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Format"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "type",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The type of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator\" />\n            helper to call and the default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> value. A default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is not calculated\n            if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is <c>checkbox</c>,\n            <c>hidden</c>, <c>password</c>, or <c>radio</c>.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "InputTypeName"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Name"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "value",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The value of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the generated \"checked\" attribute\n            if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" /> is \"radio\". Must not be <c>null</c> in that case.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;label&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "label",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-for",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "For"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;link&gt; elements that supports fallback href paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'href' attribute.\n            </remarks>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "link",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-append-version",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "link",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-href",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "link",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-href-exclude",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "link",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-href-include",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "link",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-test-class",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "link",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-test-property",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "link",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-test-value",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "link",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-href-exclude",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "link",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-href-include",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-append-version",
            "TypeName": "System.Boolean?",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Value indicating if file version should be appended to the href urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AppendVersion"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-href",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The URL of a CSS stylesheet to fallback to in the case the primary one fails.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "FallbackHref"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-href-exclude",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "FallbackHrefExclude"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-href-include",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to fallback to in the case the primary\n            one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "FallbackHrefInclude"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test-class",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The class name defined in the stylesheet to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "FallbackTestClass"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test-property",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The CSS property name to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "FallbackTestProperty"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test-value",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The CSS property value to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "FallbackTestValue"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "href",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Address of the linked resource.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Href"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-href-exclude",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "HrefExclude"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-href-include",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "HrefInclude"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-suppress-fallback-integrity",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "SuppressFallbackIntegrity"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;option&gt; elements.\n            </summary>\n            <remarks>\n            This <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> works in conjunction with <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\" />. It reads elements\n            content but does not modify that content. The only modification it makes is to add a <c>selected</c> attribute\n            in some cases.\n            </remarks>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "option",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "value",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Specifies a value for the &lt;option&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            Renders a partial view.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "partial",
            "ParentTag": null,
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "name",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "fallback-name",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            View to lookup if the view specified by <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\" /> cannot be located.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "FallbackName"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "For"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "model",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The model to pass into the partial view. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Model"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name or path of the partial view that is rendered to the response.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Name"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "optional",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            When optional, executing the tag helper will no-op if the view cannot be located. \n            Otherwise will throw stating the view could not be found.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Optional"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "view-data",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary",
            "IsEnum": false,
            "IndexerNamePrefix": "view-data-",
            "IndexerTypeName": "System.Object",
            "Documentation": "\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" /> to pass into the partial view.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ViewData"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;script&gt; elements that supports fallback src paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "script",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-append-version",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "script",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-fallback-src",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "script",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-fallback-src-exclude",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "script",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-fallback-src-include",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "script",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-fallback-test",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "script",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-src-exclude",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "script",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-src-include",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-append-version",
            "TypeName": "System.Boolean?",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Value indicating if file version should be appended to src urls.\n            </summary>\n            <remarks>\n            A query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "AppendVersion"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-src",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The URL of a Script tag to fallback to in the case the primary one fails.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "FallbackSrc"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-src-exclude",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "FallbackSrcExclude"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-src-include",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to fallback to in the case the\n            primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "FallbackSrcInclude"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The script method defined in the primary script to use for the fallback test.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "FallbackTestExpression"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "src",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Address of the external script to use.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Src"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-src-exclude",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\" />.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "SrcExclude"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-src-include",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "SrcInclude"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-suppress-fallback-integrity",
            "TypeName": "System.Boolean",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\" /> value.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "SuppressFallbackIntegrity"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;select&gt; elements with <c>asp-for</c> and/or\n            <c>asp-items</c> attribute(s).\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "select",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-for",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          },
          {
            "TagName": "select",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-items",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "For"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-items",
            "TypeName": "System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            A collection of <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" /> objects used to populate the &lt;select&gt; element with\n            &lt;optgroup&gt; and &lt;option&gt; elements.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Items"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Name"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;textarea&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "textarea",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-for",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "For"
            },
            "BoundAttributeParameters": []
          },
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Name"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-for</c>\n            attribute.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "span",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-validation-for",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-validation-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            Gets an expression to be evaluated against the current model.\n            </summary>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "For"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-summary</c>\n            attribute.\n            </summary>\n        ",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "div",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "asp-validation-summary",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {}
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-validation-summary",
            "TypeName": "Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary",
            "IsEnum": true,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "\n            <summary>\n            If <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All\" /> or <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly\" />, appends a validation\n            summary. Otherwise (<see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.None\" />, the default), this tag helper does nothing.\n            </summary>\n            <exception cref=\"T:System.ArgumentException\">\n            Thrown if setter is called with an undefined <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\" /> value e.g.\n            <c>(ValidationSummary)23</c>.\n            </exception>\n        ",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "ValidationSummary"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper"
        }
      },
      {
        "Kind": "Components.Key",
        "Name": "Key",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
        "TagOutputHint": null,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "ParentTag": null,
            "TagStructure": 0,
            "Attributes": [
              {
                "Name": "@key",
                "NameComparison": 0,
                "Value": null,
                "ValueComparison": 0,
                "Diagnostics": [],
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ],
            "Diagnostics": []
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Key",
            "Name": "@key",
            "TypeName": "System.Object",
            "IsEnum": false,
            "IndexerNamePrefix": null,
            "IndexerTypeName": null,
            "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
            "Diagnostics": [],
            "Metadata": {
              "Common.PropertyName": "Key",
              "Common.DirectiveAttribute": "True"
            },
            "BoundAttributeParameters": []
          }
        ],
        "AllowedChildTags": [],
        "Diagnostics": [],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Key",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Key"
        }
      }
    ],
    "CSharpLanguageVersion": 703
  },
  "RootNamespace": "BlazorWebViewerServer",
  "Documents": [
    {
      "FilePath": "Pages\\Index.razor",
      "TargetPath": "Pages\\Index.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "App.razor",
      "TargetPath": "App.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "Pages\\_Imports.razor",
      "TargetPath": "Pages\\_Imports.razor",
      "FileKind": "componentImport"
    },
    {
      "FilePath": "Pages\\FetchData.razor",
      "TargetPath": "Pages\\FetchData.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "Shared\\NavMenu.razor",
      "TargetPath": "Shared\\NavMenu.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "_Imports.razor",
      "TargetPath": "_Imports.razor",
      "FileKind": "componentImport"
    },
    {
      "FilePath": "Pages\\_Host.cshtml",
      "TargetPath": "Pages\\_Host.cshtml",
      "FileKind": "mvc"
    },
    {
      "FilePath": "Shared\\MainLayout.razor",
      "TargetPath": "Shared\\MainLayout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "Pages\\Error.razor",
      "TargetPath": "Pages\\Error.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "Pages\\WebViewer.razor",
      "TargetPath": "Pages\\WebViewer.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "Pages\\Counter.razor",
      "TargetPath": "Pages\\Counter.razor",
      "FileKind": "component"
    }
  ],
  "SerializationFormat": "0.1"
}